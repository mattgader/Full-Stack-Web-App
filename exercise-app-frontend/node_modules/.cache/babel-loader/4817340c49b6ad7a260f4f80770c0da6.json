{"ast":null,"code":"var _jsxFileName = \"/Users/mgader/Documents/CS 290/assignment#6/exercise-app-frontend/src/pages/CreatePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreatePage = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [reps, setReps] = useState('');\n  const [weight, setWeight] = useState('');\n  const [unit, setUnit] = useState('lbs');\n  const [date, setDate] = useState('');\n  const history = useHistory();\n\n  const addExercise = async () => {\n    const newExercise = {\n      name,\n      reps,\n      weight,\n      unit,\n      date\n    };\n    const response = await fetch('/exercises', {\n      method: 'POST',\n      body: JSON.stringify(newExercise),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (response.status === 201) {\n      alert('Successfully added the exercise');\n    } else {\n      alert(`Failed to add exercise, status code = ${response.status}`);\n    }\n\n    history.push(\"/\");\n  };\n\n  const handleDate = e => {\n    const [year, month, day] = e.target.value;\n    {\n      e => setDate(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter name here\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: reps,\n      placeholder: \"Enter reps here\",\n      onChange: e => setReps(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter weight here\",\n      value: weight,\n      onChange: e => setWeight(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"exunit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"unit\" // type=\"text\"\n      ,\n      value: unit,\n      onChange: e => setUnit(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"lbs\",\n        selected: true,\n        children: \"lbs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"kgs\",\n        children: \"kgs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"miles\",\n        children: \"Miles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"Enter date here\",\n      value: date,\n      onChange: handleDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addExercise,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePage, \"ZpgiFIwxhIRUWFiZKscYmQa2F+E=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreatePage;\nexport default CreatePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePage\");","map":{"version":3,"sources":["/Users/mgader/Documents/CS 290/assignment#6/exercise-app-frontend/src/pages/CreatePage.js"],"names":["React","useState","useHistory","CreatePage","name","setName","reps","setReps","weight","setWeight","unit","setUnit","date","setDate","history","addExercise","newExercise","response","fetch","method","body","JSON","stringify","headers","status","alert","push","handleDate","e","year","month","day","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const CreatePage = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [reps, setReps] = useState('');\r\n    const [weight, setWeight] = useState('');\r\n    const [unit, setUnit] = useState('lbs');\r\n    const [date, setDate] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const addExercise = async () => {\r\n        const newExercise = { name, reps, weight, unit, date };\r\n        const response = await fetch('/exercises', {\r\n            method: 'POST',\r\n            body: JSON.stringify(newExercise),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        if (response.status === 201) {\r\n            alert('Successfully added the exercise');\r\n        } else {\r\n            alert(`Failed to add exercise, status code = ${response.status}`);\r\n        }\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const handleDate = (e) => {\r\n        const [year, month, day] = e.target.value\r\n        {e => setDate(e.target.value)}\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Add Exercise</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter name here\"\r\n                value={name}\r\n                onChange={e => setName(e.target.value)} />\r\n            <input\r\n                type=\"number\"\r\n                value={reps}\r\n                placeholder=\"Enter reps here\"\r\n                onChange={e => setReps(e.target.value)} />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter weight here\"\r\n                value={weight}\r\n                onChange={e => setWeight(e.target.value)} />\r\n            <label for='exunit' ></label>\r\n            <select name='unit'\r\n                // type=\"text\"\r\n                value={unit}\r\n                onChange={e => setUnit(e.target.value)}>\r\n                <option value='lbs' selected>lbs</option>\r\n                <option value='kgs'>kgs</option>\r\n                <option value='miles'>Miles</option>\r\n            </select>\r\n            {/* <input\r\n                type=\"text\"\r\n                placeholder=\"Enter unit here\"\r\n                value={unit}\r\n                onChange={e => setUnit(e.target.value)} /> */}\r\n            <input\r\n                type=\"date\"\r\n                placeholder=\"Enter date here\"\r\n                value={date}\r\n                onChange={handleDate} />\r\n            <br></br>\r\n            <button\r\n                onClick={addExercise}\r\n            >Add</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatePage;"]},"metadata":{},"sourceType":"module"}